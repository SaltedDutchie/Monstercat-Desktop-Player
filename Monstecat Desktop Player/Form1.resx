<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwQABwcEAAcHBCkHBwRcBwcEZgcHBGMHBwRYBwcERgcH
        BDAHBwQYBwcEBAcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQJBwcErwcHBPwHBwT7BwcE+wcH
        BPgHBwTyBwcE5wcHBNAHBwRGBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBB8HBwTfBwcE/wcH
        BP8HBwT/BwcE/wcHBP8HBwT/BwcE8wcHBD8HBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwQABwcEFwcH
        BM8HBwT/BwcE/wcHBPgHBwT0BwcE/wcHBP8HBwTPBwcEFQcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcH
        BAAHBwQABwcEQQcHBJIHBwSKBwcEdgcHBN4HBwT/BwcE/wcHBJkHBwQBBwcEAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBAMHBwSSBwcE/wcHBP8HBwT9BwcEXwcHBAAHBwQABwcEAAcH
        BAAHBwQ0BwcEcAcHBHkHBwRrBwcETAcHBCcHBwQJBwcEAAcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwQABwcEKwcHBOUHBwT/BwcE/wcHBO0HBwQyBwcEAAAA
        AAAHBwQABwcEAgcHBKQHBwT/BwcE/wcHBP8HBwT5BwcE5gcHBKwHBwQcBwcEAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwRXBwcE/AcHBP8HBwT/BwcE3wcH
        BD0HBwQVBwcEAQcHBAAHBwQABwcEnQcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE9wcHBEQHBwQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBBIHBwR1BwcEWQcHBDcHBwQ1BwcEPQcHBJYHBwT/BwcE/wcH
        BP8HBwT7BwcE7AcHBNQHBwRhBwcEAgcHBAAHBwSXBwcE/wcHBPkHBwT6BwcE/wcHBP8HBwT3BwcERgcH
        BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwQABwcEIAcHBM0HBwT4BwcE8gcHBPIHBwT0BwcE+AcH
        BP4HBwT/BwcE/wcHBOcHBwSLBwcEygcHBOEHBwQlBwcEAgcHBK0HBwT/BwcE2wcHBH0HBwTHBwcE7AcH
        BLgHBwQZBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQBBwcEHwcHBE4HBwRmBwcEaAcH
        BFsHBwRaBwcE3QcHBP8HBwT/BwcE4gcHBCIHBwReBwcE9QcHBD8HBwQnBwcE3wcHBP8HBwTvBwcENQcH
        BA8HBwQrBwcEFAcHBAAHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQABwcEOAcH
        BIMHBwRzBwcETgcHBCsHBwSUBwcE/wcHBP8HBwT+BwcEmQcHBI0HBwTzBwcEcQcHBLYHBwT/BwcE/wcH
        BPsHBwRPBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcEAAcH
        BBAHBwTDBwcE/wcHBP8HBwT7BwcE6gcHBOAHBwT9BwcE/wcHBP8HBwT8BwcE+AcHBP0HBwT3BwcE/wcH
        BP8HBwT/BwcE9wcHBEYHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHBwQABwcEHgcHBN4HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcH
        BP8HBwT/BwcE/wcHBP8HBwTLBwcEGAcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAcHBAAHBwQNBwcEvgcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcH
        BP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBL8HBwRWBwcEJgcHBAYHBwQABwcEAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBAAHBwQ+BwcEkQcHBJsHBwSbBwcElgcHBJMHBwTMBwcE/gcH
        BP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBPsHBwTkBwcEnAcHBBMHBwQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQEBwcEcAcH
        BOEHBwSfBwcE4AcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwTyBwcEOQcH
        BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBAAHBwQSBwcEKgcH
        BGMHBwT0BwcEnwcHBA8HBwSIBwcEfQcHBKQHBwTMBwcE8gcHBN4HBwT1BwcE7gcHBP4HBwT/BwcE/wcH
        BOcHBwQrBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQABwcELQcH
        BL0HBwTrBwcE8wcHBOMHBwQvBwcEBQcHBB4HBwQBBwcEAgcHBB8HBwSLBwcENQcHBM8HBwSDBwcEiAcH
        BNsHBwT2BwcElAcHBAYHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcEAAcH
        BAQHBwSiBwcE/wcHBP8HBwT/BwcEyQcHBCoHBwRLBwcEDwcHBAAHBwQABwcEBAcHBBwHBwQGBwcEtgcH
        BKMHBwQFBwcEIAcHBD0HBwQQBwcEAAcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHBwQABwcEDwcHBMoHBwT/BwcE/wcHBP8HBwT9BwcE4gcHBMYHBwQ3BwcECgcHBAAHBwQSBwcEIQcH
        BAAHBwSbBwcE9gcHBH8HBwQHBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAcHBAAHBwQFBwcEqgcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/gcHBOkHBwS9BwcEiwcH
        BJcHBwSLBwcEOQcHBKkHBwT/BwcE8QcHBEMHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBAAHBwR5BwcE9QcHBPgHBwT/BwcE/wcHBP8HBwT/BwcE/wcH
        BP8HBwT/BwcE/wcHBPsHBwT0BwcE+QcHBP8HBwT/BwcEaAcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcEAAcHBF0HBwSnBwcEwAcHBP8HBwT/BwcE/wcH
        BP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBPEHBwRBBwcEAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwQABwcEKQcHBLoHBwTWBwcE/wcH
        BP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/gcHBPMHBwT3BwcEiwcHBAcHBwQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQCBwcEiAcH
        BP0HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT/BwcE/wcHBP8HBwT5BwcEwwcHBKIHBwQLBwcEAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcH
        BAAHBwQdBwcE1AcHBP8HBwT/BwcEvwcHBKkHBwTgBwcE8AcHBPwHBwT/BwcE/wcHBP4HBwTVBwcENQcH
        BAAHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwcEAAcHBAkHBwS8BwcE/wcHBPsHBwSTBwcENgcHBDMHBwRBBwcEygcHBP8HBwT/BwcE6AcH
        BFIHBwQABwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAHBwQABwcEAwcHBKcHBwTyBwcEeQcHBIEHBwStBwcErQcHBKQHBwTWBwcE/wcH
        BP8HBwScBwcEAQcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBAAHBwQABwcEQwcHBFMHBwQEBwcEAAcHBA4HBwQmBwcENAcH
        BFMHBwToBwcE/gcHBF0HBwQABwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHBwQABwcEBAcHBJQHBwTUBwcEHwcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAHBwQABwcEGwcHBDkHBwQBBwcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wB///4Af//+AH///gB///8Af///wPAf/8DgD//AMA/wABAP8AAAD/AA
        AB/8AAD/+AAA//gAAP/4AAA//AAAH//AAB//AAAf/gAAH/wBgD/8AJD//AAA//4AAP/+AAD//gAA//4A
        Af//AAP//wAH//8AB///iA////8P////j/8=
</value>
  </data>
</root>